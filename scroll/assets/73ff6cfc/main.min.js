window.ready = function()
{
    Custom.init();
    (function()
    {
        if ((a = $$(".slider-init")) && a.length) for (m = 0; m < a.length; m++) if (j = a[m].parentNode.parentNode) g = $$(".slider-button-left", j)[0],
        j = $$(".slider-button-right", j)[0],
        a[m] && g && j && new ebSlider(a[m], g, j, $$.HasClassName(a[m], "slider-init-1") ? 1 : null)
    })();
    
    (function()
    {
        var a = getBrowser(2),
            c = false;
        if (a[0] == "Opera" && (a[1] - 0 <= 9 || a[1] - 0 == 10 && a[2] - 0 < 50)) c = true;
        if (a[0] == "MSIE" && (a[1] - 0 == 7 || a[1] - 0 == 8)) c = true;
        if (c)
            {
                a = $$(".book-css3-shadow");
                for (c = 0; c < a.length; c++) $$.RemoveClassName(a[c], "book-css3-shadow"),
                $$.AddClassName(a[c].parentNode, "book-picture-shadow")
            }
    })()
};

function autoSlider(a)
{
    this.curentSlideNumber = 1;
    this.timeOut = 1E4;
    this.imgs = $$("img", $$("#" + a));
    $$.AddClassName(this.imgs, "moving");
    var c = this;
    this.slider = new ebSlider(a);
    this.slider.onReady = function()
    {
        if (c.onReady) c.onReady(c.curentSlideNumber)
    };
    this.numberOfSlides = this.slider.itemCnt;
    setTimeout(function()
    {
        for (var c = $$(".img-lazy-load-i", $$("#" + a)), e = 0; e < c.length; e++) $$.LazyLoad(c[e])
    }, this.timeOut);
    this.intervalId = setInterval(function()
    {
        c.Go(1)
    }, this.timeOut)
}
autoSlider.prototype.GoTo = function(a)
{
    return this.Go(a - this.curentSlideNumber)
};
autoSlider.prototype.ResetTimer = function()
{
    clearInterval(this.intervalId);
    var a = this;
    this.intervalId = setInterval(function()
    {
        a.Go(1)
    }, this.timeOut)
};
autoSlider.prototype.Go = function(a)
{
    this.curentSlideNumber += a;
    this.curentSlideNumber > this.numberOfSlides && (this.curentSlideNumber -= this.numberOfSlides);
    this.curentSlideNumber < 1 && (this.curentSlideNumber += this.numberOfSlides);
    if (a == 0) return false;
    this.slider.Go(-a);
    return true
};

function ebSlider(a, c, d, e)
{
    this.cntr = typeof a == "string" ? $$("#" + a) : a;
    this.btLeft = typeof c == "string" ? $$("#" + c) : c;
    this.brRight = typeof d == "string" ? $$("#" + d) : d;
    if (this.cntr)
    {
        this.cntr.slider = this;
        var f = this.cntr.parentNode.parentNode;
        f.onmousemove = function()
        {
            f.onmousemove = null;
            for (var a = $$(".img-lazy-load-i", f), c = 0; c < a.length; c++) $$.LazyLoad(a[c])
        }
    }
    this.items = [];
    this.ul = a = $$("ul", this.cntr)[0];
    this.itemWidth = (this.items = c = $$("li", this.cntr)) && this.items.length > 1 ? c[1].offsetLeft - c[0].offsetLeft : c[0].offsetWidth;
    this.itemCnt = c.length;
    this.options =
    {
        timerstep: 13,
        shifttime: 400
    };
    var d = (d = $$.GetStyle(this.cntr, "paddingLeft")) ? parseInt(d) : 0,
        h = this.cntr.style;
    h.width = $$.GetInnerWidth(this.cntr) + "px";
    h.left = d + "px";
    h.paddingLeft = "0px";
    h.paddingRight = "0px";
    this.ul.style.position = "absolute";
    this.numItemsVisible = Math.round(this.cntr.offsetWidth / this.itemWidth);
    this.left = 0;
    this.minX = this.itemCnt * -this.itemWidth;
    this.maxX = this.numItemsVisible * this.itemWidth;
    this.visibleWidth = this.numItemsVisible * this.itemWidth;
    this.step =
    e || this.numItemsVisible;
    this.stepPxs = this.step * this.itemWidth;
    this.btLeft && this.brRight && c.length <= Math.round(this.numItemsVisible) && $$.AddClassName([this.btLeft, this.brRight], "hidden");
    this.maxWidth = this.itemWidth * c.length;
    a.style.width = this.maxWidth + "px";
    if (this.numItemsVisible < this.itemCnt)
        {
            for (e = this.itemCnt - this.numItemsVisible; e < this.itemCnt; e++) d = c[e].cloneNode(true),
            d.style.position = "absolute",
            d.style.left = (e - this.itemCnt) * this.itemWidth + "px",
            a.appendChild(d);
            for (e = 0; e < this.numItemsVisible; e++) d =
            c[e].cloneNode(true),
            d.style.position = "absolute",
            d.style.left = (e + this.itemCnt) * this.itemWidth + "px",
            a.appendChild(d)
        }
    var g = this;
    if (this.btLeft)
        {
            var j = this.btLeft.onclick;
            this.btLeft.onclick = function(a)
            {
                j && j(a);
                g.ChangeImagesShadow();
                g.Go(g.step)
            }
        }
    if (this.brRight)
        {
            var i = this.brRight.onclick;
            this.brRight.onclick = function(a)
            {
                i && i(a);
                g.ChangeImagesShadow();
                g.Go(-g.step)
            }
        }
}
ebSlider.prototype.ChangeImagesShadow = function()
{
    if (!this.isShadowsChanged)
    {
        for (var a = getBrowser(2), a = a[0] == "Firefox" || a[0] == "Safari" ? "book-picture-shadow-ff-sf" : "book-picture-shadow", c = $$(".book-css3-shadow", this.ul), d = 0; d < c.length; d++) $$.RemoveClassName(c[d], "book-css3-shadow"),
        $$.AddClassName(c[d].parentNode, a);
        this.isShadowsChanged = true
    }
};
ebSlider.prototype.Go = function(a)
{
    if (!this.isProcessing) this.isProcessing = true,
    a %= this.items.length,
    this.ShiftItems(a * this.itemWidth)
};
ebSlider.prototype.ShiftItems = function(a)
{
    var c = this,
        d = (new Date).getTime();
    if (a && this.left + a >= this.maxWidth) this.left = -this.maxWidth + this.left;
    this.siP =
        {
            totalOffset: a,
            offset: 0,
            shiftBase: parseInt(this.left),
            shiftFinal: parseInt(this.left) + a,
            dateStart: d,
            dateRatio: a / this.options.shifttime
        };
    var e = function()
        {
            var d = true;
            if (Math.abs(c.siP.totalOffset) > Math.abs(c.siP.offset))
            {
                d = ((new Date).getTime() - c.siP.dateStart) * c.siP.dateRatio;
                c.siP.offset = Math.abs(d) > Math.abs(c.siP.totalOffset) ? a : d;
                c.left = c.siP.shiftBase + c.siP.offset;
                if (c.left <= -c.maxWidth) c.left = 0;
                c.left >= c.maxX || c.left > 0 && c.siP.shiftBase < 0 && c.siP.shiftFinal > 0 ? c.siP.shiftFinal == 0 ? d = false : (c.left = c.left > 0 && c.siP.shiftBase < 0 && c.siP.shiftFinal > 0 ? 0 : -c.maxWidth + c.maxX, d = true) : c.left + c.stepPxs * (a > 0 ? 1 : -1) <= -c.maxWidth ? c.siP.shiftBase + c.stepPxs * (a > 0 ? 1 : -1) == -c.maxWidth || c.siP.shiftBase + c.stepPxs * (a > 0 ? 1 : -1) == c.minX ? d = false : (c.left = -c.maxWidth - c.stepPxs * (a > 0 ? 1 : -1), d = true) : d = false;
                c.ul.style.left = c.left + "px";
                if (!d) c.siP.asyncId = setTimeout(e, 30)
            }
            if (d && (c.isProcessing =
            false, clearTimeout(c.siP.asyncId), c.siP.asyncId = null, c.onReady)) c.onReady()
        };
    e()
};
var checkboxHeight = "25",
    radioHeight = "25",
    selectWidth = "190",
    Custom =
    {
        refresh: function()
        {
            for (var a = document.getElementsByTagName("input"), c = 0; c < a.length; c++) if ((a[c].type == "checkbox" || a[c].type == "radio") && a[c].className == "styled")
            {
                var d = document.getElementById(a[c].id + "-span");
                if (d == null) break;
                var e;
                a[c].checked == true ? (e = "0 -" + checkboxHeight * 2 + "px", d.style.backgroundPosition = e) : d.style.backgroundPosition = "0 0px";
                a[c].onchange = Custom.clear;
                a[c].getAttribute("disabled") ? d.className = span[c].className += " disabled" : (d.onmousedown = Custom.pushed, d.onmouseup = Custom.check)
            }
        },
        init: function()
        {
            for (var a = document.getElementsByTagName("input"), c = [], d, e, f = 0; f < a.length; f++) if ((a[f].type == "checkbox" || a[f].type == "radio") && a[f].className == "styled")
            {
                e = null;
                a[f].id != null && a[f].id != "" && (e = document.getElementById(a[f].id + "-span"));
                if (e == null && (e = document.createElement("span"), e.className = a[f].type, a[f].id != null && a[f].id != "")) e.id = a[f].id + "-span";
                c[f] = e;
                if (a[f].checked == true) e = a[f].type == "checkbox" ? "0 -" + checkboxHeight * 2 + "px" : "0 -" + radioHeight * 2 + "px",
                c[f].style.backgroundPosition = e;
                a[f].parentNode.insertBefore(c[f], a[f]);
                a[f].onchange = Custom.clear;
                a[f].getAttribute("disabled") ? c[f].className = c[f].className += " disabled" : (c[f].onmousedown = Custom.pushed, c[f].onmouseup = Custom.check)
            }
            for (var a = document.getElementsByTagName("select"), f = 0; f < a.length; f++) if (a[f].className == "styled")
            {
                e = a[f].getElementsByTagName("option");
                d = e[0].childNodes[0].nodeValue;
                d = document.createTextNode(d);
                for (b = 0; b < e.length; b++) e[b].selected == true && (d = document.createTextNode(e[b].childNodes[0].nodeValue));
                c[f] = document.createElement("span");
                c[f].className = "select";
                c[f].id = "select" + a[f].name;
                c[f].appendChild(d);
                a[f].parentNode.insertBefore(c[f], a[f]);
                c[f].style.width = a[f].offsetWidth + "px";
                a[f].style.width = c[f].offsetWidth + "px";
                a[f].getAttribute("disabled") ? a[f].previousSibling.className = a[f].previousSibling.className += " disabled" : a[f].onchange = Custom.choose
            }
            $$.AddEvent(document, "onmouseup", Custom.clear)
        },
        pushed: function()
        {
            var a = this.nextSibling;
            this.style.backgroundPosition = a.checked == true && a.type == "checkbox" ? "0 -" + checkboxHeight * 3 + "px" : a.checked == true && a.type == "radio" ? "0 -" + radioHeight * 3 + "px" : a.checked != true && a.type == "checkbox" ? "0 -" + checkboxHeight + "px" : "0 -" + radioHeight + "px"
        },
        check: function()
        {
            var a = this.nextSibling;
            if (a.checked == true && a.type == "checkbox") this.style.backgroundPosition = "0 0",
            $$.RemoveClassName(a, "checked"),
            a.checked = false;
            else
            {
                if (a.type == "checkbox") this.style.backgroundPosition = "0 -" + checkboxHeight * 2 + "px";
                else
                {
                    this.style.backgroundPosition = "0 -" + radioHeight * 2 + "px";
                    for (var c = this.nextSibling.name, d = document.getElementsByTagName("input"), e = 0; e < d.length; e++) if (d[e].name == c && d[e] != this.nextSibling) d[e].previousSibling.style.backgroundPosition = "0 0"
                }
                a.checked = true;
                $$.AddClassName(a, "checked")
            }
        },
        clear: function()
        {
            for (var a = document.getElementsByTagName("input"), c = 0; c < a.length; c++) if (a[c].type == "checkbox" && a[c].checked == true && a[c].className == "styled") a[c].previousSibling.style.backgroundPosition = "0 -" + checkboxHeight * 2 + "px";
            else if (a[c].type == "checkbox" && a[c].className == "styled") a[c].previousSibling.style.backgroundPosition = "0 0";
            else if (a[c].type == "radio" && a[c].checked == true && a[c].className == "styled") a[c].previousSibling.style.backgroundPosition = "0 -" + radioHeight * 2 + "px";
            else if (a[c].type == "radio" && a[c].className == "styled") a[c].previousSibling.style.backgroundPosition = "0 0"
        },
        choose: function()
        {
            for (var a = this.getElementsByTagName("option"), c = 0; c < a.length; c++) if (a[c].selected == true) document.getElementById("select" + this.name).childNodes[0].nodeValue = a[c].childNodes[0].nodeValue
        }
    },
    $$ = function(a, c)
    {
        if (a && a.length > 0)
        {
            var d = a.substr(0, 1),
                e = a.substr(1);
            c || (c = document);
            return d == "." ? $$.GetElementsByClassName(e, c) : d == "#" ? document.getElementById(e) : c.getElementsByTagName(a)
        }
        return null
    };
$$.NextSibling = function(a)
    {
        typeof a == "string" && (a = $$(a));
        for (a = a.nextSibling; a && a.nodeType != 1;) a = a.nextSibling;
        return a
    };
$$.PreviousSibling = function(a)
    {
        typeof a == "string" && (a = $$(a));
        for (a = a.previousSibling; a && a.nodeType != 1;) a = a.previousSibling;
        return a
    };
$$.GetStyle = function(a, c)
    {
        var d = null;
        window.getComputedStyle ? d = window.getComputedStyle(a, null)[c] : a.currentStyle && (d = a.currentStyle[c]);
        return d
    };
$$.GetInnerWidth = function(a)
    {
        var c = $$.GetStyle(a, "paddingLeft"),
            d = $$.GetStyle(a, "paddingRight"),
            c = c ? parseInt(c) : 0,
            d = d ? parseInt(d) : 0;
        return a.offsetWidth > 0 ? a.offsetWidth - c - d : 0
    };
$$.GetElementsByClassName = function(a, c)
    {
        if (!c) c = document.body;
        for (var d = $$("*", c), e = [], f, h = 0;
        (f = d[h]) != null; h++) $$.HasClassName(f, a) && e.push(f);
        return e
    };
$$.HasClassName = function(a, c)
    {
        if (!a) return false;
        if (typeof a != "string") a = a.className;
        var d = RegExp("(?:^|\\s)" + c + "(?:$|\\s)");
        return a && a.indexOf(c) != -1 && d.test(a) ? true : false
    };
$$.AddClassName = function(a, c)
    {
        if (typeof a == "array" || (a.length || a.length == 0) && a.tagName != "SELECT") for (var d = 0; d < a.length; d++) $$.AddClassName(a[d], c);
        else if (!$$.HasClassName(a, c)) a.className ? (d = $$.TrimAndNormalize(a.className), c = $$.TrimAndNormalize(c), a.className = d + " " + c) : a.className = c
    };
$$.TrimAndNormalize = function(a)
    {
        return !a ? void 0 : a.replace(/^\s*/, "").replace(/\s*$/, "").replace(/\s{2,}/, " ")
    };
$$.RemoveClassName = function(a, c)
    {
        if (typeof a == "array" || (a.length || a.length == 0) && a.tagName != "SELECT") for (var d = 0; d < a.length; d++) $$.RemoveClassName(a[d], c);
        else if ($$.HasClassName(a, c)) a.className = $$.TrimAndNormalize(a.className.replace(RegExp("(?:^|\\s)" + c + "(?:$|\\s)"), " "))
    };
$$.AddEvent = function(a, c, d)
    {
        if (typeof a == "array" || a.length)
        {
            for (var e = [], f = 0; f < a.length; f++) e.push($$.AddEvent(a[f], c, d));
            return e
        }
        return a.addEventListener ? (a.addEventListener(c, d, false), d) : (e = function()
        {
            d.call(a)
        }, a.attachEvent("on" + c, e), e)
    };
    
$$.LazyLoad = function(a)
    {
        if (a && a.onload)
        {
            var c = a.onload();
            a.onload = null;
            a.src = c
        }
    };
$$.SlideOptions = function(a)
    {
        var c = new
        function()
        {
            this.timeOfAnimation = 200;
            this.maxHeight = 0;
            this.timeOfLastModification = new Date;
            this.lengthOfShiftForOneMillisecond = 1;
            this.node = a
        };
        this.updateLastTimeOfModification = function()
        {
            c.timeOfLastModification = (new Date).getTime()
        };
        this.setTimeToShift = function(a)
        {
            c.timeOfAnimation = a
        };
        this.calcLengthOfShiftForOneMillisecond = function()
        {
            c.lengthOfShiftForOneMillisecond = c.maxHeight / c.timeOfAnimation
        };
        this.getCorrectedLengthToShift = function()
        {
            var a = (new Date).getTime() - c.timeOfLastModification,
                a = Math.ceil(c.lengthOfShiftForOneMillisecond * a);
            this.updateLastTimeOfModification();
            return a
        };
        this.getLengthOfShiftForOneMillisecond = function()
        {
            return c.lengthOfShiftForOneMillisecond
        };
        this.setMaxHeight = function(a)
        {
            c.maxHeight = a;
            this.calcLengthOfShiftForOneMillisecond()
        };
        this.getMaxHeight = function()
        {
            return c.maxHeight
        };
        this.getNode = function()
        {
            return c.node
        }
    };
$$.SlideUp = function(a, c)
    {
        var d = new $$.SlideOptions(a);
        d.setMaxHeight(a.offsetHeight);
        d.getNode().style.overflow = "hidden";
        d.getNode().style.height = d.getNode().offsetHeight + "px";
        new Timer(function(a)
        {
            var d = parseInt(a.getNode().style.height),
                h = a.getCorrectedLengthToShift();
            !a.getNode().style.height || h < d ? (d -= h, a.getNode().style.height = d + "px") : (a.getNode().style.height = "0px", c && c())
        }, 10, d, function(a)
        {
            return parseInt(a.getNode().style.height) != 0 ? true : false
        })
    };
$$.SlideDown = function(a, c)
    {
        var d = new $$.SlideOptions(a);
        d.getNode().style.height = "0px";
        d.getNode().style.display = "block";
        d.getNode().style.overflow = "hidden";
        var e = a.children;
        d.setMaxHeight(e[e.length - 1].offsetTop - e[0].offsetTop + e[e.length - 1].offsetHeight);
        d.getNode().style.overflow = "hidden";
        d.getNode().style.height = d.getNode().offsetHeight + "px";
        new Timer(function(a)
        {
            var d = parseInt(a.getNode().style.height),
                e = a.getCorrectedLengthToShift();
            !a.getNode().style.height || d + e < parseInt(a.getMaxHeight()) ? (d += e, a.getNode().style.height = d + "px") : (a.getNode().style.height = a.getMaxHeight() + "px", a.getNode().style.height = "", c && c())
        }, 10, d, function(a)
        {
            return parseInt(a.getNode().style.height) < a.getMaxHeight() ? true : false
        })
    };

function Timer(a, c, d, e)
    {
        d = function(d)
        {
            return function()
            {
                d && d.timer && clearTimeout(d.timer.timeOutID);
                if (e(d)) a(d),
                d.timer = new Timer(a, c, d, e)
            }
        }(d);
        this.timeOutID = setTimeout(d, c)
    }

    
$$.GetParent = function(a, c)
    {
        if (a && a.length > 0)
        {
            var d = a.substr(0, 1),
                e = a.substr(1).toLowerCase();
            if (!c) return null;
            if (d == ".")
                {
                    for (;
                    (d = c.parentNode) != null;)
                    {
                        if ($$.HasClassName(d, e)) return d;
                        c = d
                    }
                    return null
                }
            if (d == "#")
                {
                    for (;
                    (d = c.parentNode) != null;)
                    {
                        if (d.id.toLowerCase() == e) return d;
                        c = d
                    }
                    return null
                }
            for (;
                (d = c.parentNode) != null;)
                {
                    if (d.tagName.toLowerCase() == a) return d;
                    c = d
                }
        }
        return null
    };

function browserDetectNav(a){var c=window.navigator.userAgent,d=/Version[ \/]+\w+\.\w+/i,e=/Safari\/\w+\.\w+/i,f=[],h=/[ \/\.]/i,d=c.match(d),g=c.match(/Firefox\/\w+\.\w+/i),j=c.match(/Chrome\/\w+\.\w+/i),i=c.match(/Version\/\w+\.\w+/i),e=c.match(e),k=c.match(/MSIE *\d+\.\w+/i),c=c.match(/Opera[ \/]+\w+\.\w+/i);!c==""&!d==""?f[0]=d[0].replace(/Version/,"Opera"):!c==""?f[0]=c[0]:!k==""?f[0]=k[0]:!g==""?f[0]=g[0]:!j==""?f[0]=j[0]:!i==""&&!e==""&&(f[0]=i[0].replace("Version","Safari"));var l;f[0]!=null&&
(l=f[0].split(h));return(a==null|a==0)&l!=null?(a=l[2].length,l[2]=l[2].substring(0,a),l):a!=null?(l[2]=l[2].substr(0,a),l):false}

function browserDetectJS(){var a=[];window.opera?(a[0]="Opera",a[1]=window.opera.version()):window.chrome?a[0]="Chrome":window.sidebar?a[0]="Firefox":!window.external&&a[0]!=="Opera"?a[0]="Safari":window.ActiveXObject&&(a[0]="MSIE",a[1]=window.navigator.userProfile?"6":window.Storage?"8":!window.Storage&&!window.navigator.userProfile?"7":"Unknown");return a?a:false}

function getBrowser(a){var a=browserDetectNav(a),c=browserDetectJS();return a[0]==c[0]?a:a[0]!=c[0]?c:false}function isItBrowser(a,c,d){switch(d){case 1:d=browserDetectNav();break;case 2:d=browserDetectJS();break;default:d=getBrowser()}return a==d[0]&c==d[1]?true:a==d[0]&(c==null||c==0)?true:false};